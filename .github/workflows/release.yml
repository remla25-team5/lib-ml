# name: Release lib-ml

# on:
#   push:
#     tags:
#       ["v[0-9]+.[0-9]+.[0-9]+"]

# permissions:
#   contents: write

# jobs: 
#   tag_check_and_release_entry:
#     name: Check Tag and Create Release Entry
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Parse version from tag
#         run: |
#           VERSION=${GITHUB_REF:11}
#           MAJOR=$(echo "$VERSION" | cut -d . -f 1)
#           MINOR=$(echo "$VERSION" | cut -d . -f 2)
#           PATCH=$(echo "$VERSION" | cut -d . -f 3)
#           echo "version=$VERSION" >> $GITHUB_ENV
#           echo "version_major=$MAJOR" >> $GITHUB_ENV
#           echo "version_minor=$MINOR" >> $GITHUB_ENV
#           echo "version_patch=$PATCH" >> $GITHUB_ENV
#           echo "final_version=${MAJOR}.${MINOR}.${PATCH}" >> $GITHUB_ENV
          
#       # - name: Check if tag is on main branch history
#       #   run: |
#       #     echo "Checking if tag ${{ github.ref_name }} (commit $GITHUB_SHA) is on the main branch..."
#       #     git fetch origin main:refs/remotes/origin/main
#       #     if git merge-base --is-ancestor $GITHUB_SHA origin/main; then
#       #       echo "Tag ${{ github.ref_name }} is on the main branch history. Acknowledged as release point."
#       #     else
#       #       echo "Tag ${{ github.ref_name }} is NOT on the main branch history. Ignoring tag."
#       #       exit 1
#       #     fi
#       #   shell: bash

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.9'

#       - name: Build wheel / sdist
#         run: |
#           python -m pip install --upgrade pip build  
#           python -m build  
        
#       - name: Get Artifact Filenames
#         id: get_filenames
#         run: |
#           WHEEL_FILE=$(ls dist/*.whl | head -n 1)
#           WHEEL_FILENAME=$(basename $WHEEL_FILE)
#           echo "Found wheel file: $WHEEL_FILENAME"
#           echo "wheel_filename=$WHEEL_FILENAME" >> $GITHUB_ENV

#       - name: Create GitHub Release Page Entry
#         uses: softprops/action-gh-release@v2
#         with:
#           tag_name: ${{ env.final_version }}
#           name: Release ${{ github.ref_name }}
#           body: |
#             Release of version ${{ github.ref_name }} for lib-ml.
    
#              **Installation:**
#             Download the `.whl` file from the assets below and install using pip:
#             ```bash
#             pip install https://github.com/${{ github.repository }}/releases/download/${{ env.final_version }}/${{ env.wheel_filename }}
#             ```
#             or add it to your requirements.txt
#           files: dist/*
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}